name: Point a tag to a new commit

on:         
  workflow_dispatch:
    inputs:
      tag_name:
        required: true
        type: string
      commit_sha:
        required: true
        type: string
        
  workflow_call:
    inputs:
      tag_name:
        required: true
        type: string
      commit_sha:
        required: true
        type: string
    
env:
    GH_TOKEN: ${{ github.token }}
    
jobs:
  check-and-set:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - name: Get tag's current commit
        id: get_tag_commit
        run: |
          TAG=${{ inputs.tag_name }}
          TAG_COMMIT=$( gh api \
          --method GET \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/ydernov/typing-effect/git/refs/tags/$TAG | jq '.object.sha')

          if [ -z "$TAG_COMMIT" ]; then
            echo "::error::The tag $TAG might not exist, or is not attached to commit."
            exit 1
          fi
          
          echo "tag_commit=$TAG_COMMIT" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Test tags'c current commit and new commit relation
        id: test_relation
        run: |
          TAG_COMMIT=${{ steps.get_tag_commit.outputs.tag_commit }}
          NEW_COMMIT=${{ inputs.commit_sha }}
          # Check that current commit is an ancestor of new commit; 0 - if true, 1 - if false
          FIRST=$( git merge-base --is-ancestor $TAG_COMMIT $NEW_COMMIT;  echo $?)
          
          # Check that new commit is an ancestor of current commit; 0 - if true, 1 - if false
          SECOND=$( git merge-base --is-ancestor $NEW_COMMIT $TAG_COMMIT;  echo $?)

          # One or the other must be an ancestor, only one
          if [ $((FIRST + SECOND)) -ne 1 ]; then
            echo "::error::Either the commits are not related or the references do not exist."
            exit 1
          fi
          
      - name: Point a tag to a new commit
        run: |
          TAG=${{ inputs.tag_name }}
          COMMIT=${{ inputs.commit_sha }}

          echo "URL - /repos/ydernov/typing-effect/git/refs/tags/$TAG"
          echo "Flags -  -f sha=$COMMIT -F force=true"

          RESPONSE=$( curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ github.token }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/ydernov/typing-effect/git/refs/tags/v1.3.0 \
            -d "{\"sha\":\"4eb6962463bd6c30ac1eac3c9da87db1021e6bf0\",\"force\":true}" -v )
          
          # RESPONSE=$( gh api \
          #   --method PATCH \
          #   -H "Accept: application/vnd.github+json" \
          #   -H "X-GitHub-Api-Version: 2022-11-28" \
          #   /repos/ydernov/typing-effect/git/refs/tags/$TAG \
          #   -i --verbose -f "sha=$COMMIT" -F "force=true" )

          echo $RESPONSE
