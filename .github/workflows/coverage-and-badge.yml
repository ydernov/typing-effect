name: Run coverage, create badge config, and push to gh-pages

on: 
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        
  workflow_dispatch:

env: 
  REF: ${{ inputs.ref || github.ref }}
  
jobs:
  create-coverage:
    runs-on: ubuntu-latest
    env: 
      PAGES_TARGET: ${{ startsWith(inputs.ref || github.ref, 'refs/tags/') && 'release' || 'main' }}
    steps:    
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.REF }}
          fetch-depth: 0
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
    
      - name: Run coverage
        run: |
          npm ci
          npm run coverage

      - name: Create badge config 
        id: create-badge-config
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const path = require('path');
              const summaryTotal = require(path.join(path.resolve(), '/coverage/coverage-summary.json')).total;
              const coverageKeys = ["lines", "statements", "functions", "branches"];
              const colorRanges = {
                0: "red",
                50: "orange",
                60: "yellow",
                70: "yellowgreen",
                80: "green",
                90: "brightgreen",
              };

              const total = coverageKeys.reduce((prev, key) => prev + summaryTotal[key]?.pct || 0, 0) / coverageKeys.length;
                
              const colorKey = (
                Object.keys(colorRanges)
                  .filter((key) => Number(key) <= total)
                  .pop() || 0
              ).toString();

              const clampedTotal = parseFloat(total.toFixed(1));

              return JSON.stringify({
                schemaVersion: 1,
                label: "Coverage",
                message: clampedTotal + "%",
                color: colorRanges[colorKey],
              });
            } catch(err) {
              core.error("Error while creating JSON for coverage badge")
              core.setFailed(err)
            } 

      - name: Write config to badge.json 
        run: |
          cd coverage
          BADGE_JSON="${{ steps.create-badge-config.outputs.result }}"
          echo $BADGE_JSON > badge.json
      
      - name: Move coverage contents into ${{ env.PAGES_TARGET }}
        run: |
          cd coverage
          TARGET_DIR="${{ env.PAGES_TARGET }}"
          mkdir "$TARGET_DIR"
          find . -mindepth 1 -maxdepth 1 ! -name "$TARGET_DIR" -exec mv {} "$TARGET_DIR" \;
          
      - name: Commit and push changes
        run: |
          git fetch origin gh-pages
          git reset origin/gh-pages
          git checkout gh-pages
  
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add -f coverage
          git commit -m "Run coverage and created badge for ${{ env.PAGES_TARGET }}"
          git push --atomic origin gh-pages

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts
          path: ./coverage
          if-no-files-found: error
          retention-days: 1

          


   
