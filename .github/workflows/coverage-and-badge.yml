name: Run coverage, create badge config, and push to gh-pages

on: 
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
        
  workflow_dispatch:

env: 
  REF: ${{ inputs.ref || github.ref }}
  
jobs:
  create-coverage:
    runs-on: ubuntu-latest
    env: 
      PAGES_TARGET: ${{ startsWith(inputs.ref || github.ref, 'refs/tags/') && 'release' || 'main' }}
    steps:    
      - uses: actions/checkout@v4
        with:
          ref: ${{ env.REF }}
          fetch-depth: 0
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - run: npm ci

      - run: npm run coverage

      - name: Create badge config
        run: |
          cd coverage
          # cat coverage-summary.json | jq '
          # { "0": "red", "50": "orange", "60": "yellow", "70": "yellowgreen", "80": "green", "90": "brightgreen" } as $ranges 
          # | ([.total.["lines", "statements", "functions", "branches"].pct] | add / length) as $tp 
          # | ($ranges | keys | map(select( . <= ($tp | tostring)))[-1]) as $ckey 
          # | {schemaVersion: "1", label: "Coverage", message: ($tp | tostring + "%"), color: $ranges[$ckey] }
          # ' > badge.json

          jq '{ "0": "red", "50": "orange", "60": "yellow", "70": "yellowgreen", "80": "green", "90": "brightgreen" } as $ranges | ([.total.["lines", "statements", "functions", "branches"].pct] | add / length) as $tp | ($ranges | keys | map(select( . <= ($tp | tostring)))[-1]) as $ckey | {schemaVersion: "1", label: "Coverage", message: ($tp | tostring + "%"), color: $ranges[$ckey] }' coverage-summary.json > badge.json

      
      - name: Move coverage contents into ${{ env.PAGES_TARGET }}
        run: |
          TARGET_DIR="${{ env.PAGES_TARGET }}"
          find . -mindepth 1 -maxdepth 1 ! -name "$TARGET_DIR" -exec mv {} "$TARGET_DIR" \;
          
      - name: Commit and push changes
        run: |
          cd ../
          git checkout gh-pages
  
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add coverage
          git commit -m "Run coverage and created badge for ${{ env.PAGES_TARGET }}"
          
          git push --atomic origin gh-pages

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: artifacts
          path: ./coverage
          if-no-files-found: error
          retention-days: 1

          


   
