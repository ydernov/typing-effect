name: Update Version in package.json on Release

on: 
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      ref_name:
        required: true
        type: string
        
  workflow_dispatch:
    inputs:
      ref:
        required: true
        type: string
        default: 'refs/tags/TAG_NAME'
      ref_name:
        required: true
        type: string
        default: 'TAG_NAME'
    
    
jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:    
      - name: Check that ref is a tag
        if: ${{ !startsWith(inputs.ref, 'refs/tags/') }}
        run: echo "::error::The workflow must be triggered on a tag ref" && exit 1
      
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update package.json version
        id: extract_version
        run: |
          TAG=${{ inputs.ref_name }}
          VERSION=${TAG#v} # Remove the 'v' prefix
          echo "New version: $VERSION"
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          
      - run: npm i

      - name: Commit and push changes
        run: |
          TAG=${{ inputs.ref_name }}
          raw=$(git branch -r --contains ${{ inputs.ref }})
          BRANCH=${raw##*/}
          LOCAL_BRANCH="$BRANCH-version-bump-$TAG"

          PR_TITLE="chore (automated): update package.json version to ${{ steps.extract_version.outputs.version }} in branch $BRANCH"
          
          git checkout $BRANCH
          git branch $LOCAL_BRANCH
          git switch $LOCAL_BRANCH
          
          echo "Tag $TAG was originaly added to commit $(git rev-parse HEAD)"
  
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add package-lock.json package.json
          git commit -m "$PR_TITLE"
          COMMIT_HASH=$(git rev-parse HEAD)

          git push origin $LOCAL_BRANCH
          
          gh pr create --title "$PR_TITLE" --body "This is an automated PR to update package.json and package-lock.json version" --base "$BRANCH"
          gh pr merge --auto --delete-branch --squash "$LOCAL_BRANCH"


          gh release edit "$TAG" --target "$COMMIT_HASH"
          
          # git tag -f ${{ inputs.ref_name }} $COMMIT_HASH
          # git push --atomic origin $BRANCH ${{ inputs.ref_name }} --force

          echo "Tag $TAG was linked to a new commit $COMMIT_HASH"


   
