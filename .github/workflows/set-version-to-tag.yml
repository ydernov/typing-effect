name: Update the project version in package.json and package-json.lock based on tag name

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      ref_name:
        required: true
        type: string

    outputs:
      merge_commit_sha:
        description: "Hash of the merge commit on the remote branch"
        value: ${{ jobs.update_version.outputs.mr_sha }}

  workflow_dispatch:
    inputs:
      ref:
        required: true
        type: string
        default: "refs/tags/TAG_NAME"
      ref_name:
        required: true
        type: string
        default: "TAG_NAME"

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  update_version:
    outputs:
      mr_sha: ${{ steps.push_n_merge.outputs.commit_sha }}
    runs-on: ubuntu-latest
    steps:
      - name: Check that ref is a tag
        if: ${{ !startsWith(inputs.ref, 'refs/tags/') }}
        run: echo "::error::The workflow must be triggered on a tag ref" && exit 1

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update package.json version
        id: extract_version
        run: |
          TAG=${{ inputs.ref_name }}
          VERSION=${TAG#v} # Remove the 'v' prefix
          echo "New version: $VERSION"
          sed -i "s/\"version\": \".*\"/\"version\": \"$VERSION\"/" package.json
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update package.lock
        run: |
          npm i --package-lock-only

      - name: Commit and push changes
        id: push_n_merge
        run: |
          TAG=${{ inputs.ref_name }}
          raw=$(git branch -r --contains ${{ inputs.ref }})
          BRANCH=${raw##*/}
          LOCAL_BRANCH="auto-$BRANCH-version-bump-$TAG"

          PR_TITLE="chore (automated): update package.json version to ${{ steps.extract_version.outputs.version }} in branch $BRANCH"

          git checkout $BRANCH
          git branch $LOCAL_BRANCH
          git switch $LOCAL_BRANCH

          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          git add package-lock.json package.json
          git commit -m "Update version in package.json and in package-lock.json to ${{ steps.extract_version.outputs.version }}"
          git push origin $LOCAL_BRANCH

          echo 'Creating PR...'
          PR_URL=$(gh pr create --title "$PR_TITLE" --body "This is an automated PR to update package.json and package-lock.json version" --base "$BRANCH")
          echo "PR created, pr url - $PR_URL"
          echo "Merging PR - $PR_URL"
          gh pr merge $PR_URL --auto --delete-branch --squash

          # Since actions do not trigger other workflows (e.g. custom workflows on push, merge, etc.), gh pr merge happens immediately
          # the code below is just for additional safety and future-proofing
          CURRENT_TIME=0
          while [[ "$(gh pr view $PR_URL --json state --template '{{.state}}')" != 'MERGED' ]];
            do
              if [ $CURRENT_TIME -lt 60 ]; then
                  echo "Still not merged: retrying in 10 seconds...\n" 
                  CURRENT_TIME=$((CURRENT_TIME+10))
                  sleep 10
              else 
                  echo "::error::The merge process took longer than the 60-second timeout limit."
                  exit 1
              fi
          done

          MERGE_COMMIT=$(gh pr view $PR_URL --json mergeCommit --template '{{.mergeCommit.oid}}')
          echo "Merge commit sha - $MERGE_COMMIT"
          echo "commit_sha=$MERGE_COMMIT" >> $GITHUB_OUTPUT
