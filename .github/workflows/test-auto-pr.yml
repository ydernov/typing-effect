name: Testing autometed pr commits sha, and merge status tracking

on: 
  workflow_dispatch:
    
env:
    GH_TOKEN: ${{ github.token }}
    
jobs:
  update-test-for-commits:
    runs-on: ubuntu-latest
    steps:    
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Update test-for-commits.txt
        id: get_new_lastLine
        run: |
          LAST_LINE=$(tail -1 test-for-commits.txt)
          NEW_LAST_LINE=$((LAST_LINE + 1))
          echo $NEW_LAST_LINE >> test-for-commits.txt
          echo "last_line=$NEW_LAST_LINE" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        run: |
          LAST_LINE=${{ steps.get_new_lastLine.outputs.last_line }}
          BRANCH=$(git branch --show-current)
          LOCAL_BRANCH="autocreated-$BRANCH"
          
          PR_TITLE="chore (automated): update test-for-commits.txt, append $LAST_LINE in branch $BRANCH"
          
          git checkout $BRANCH
          git branch $LOCAL_BRANCH
          git switch $LOCAL_BRANCH
  
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add test-for-commits.txt
          git commit -m "Update test-for-commits.txt, append $LAST_LINE"
          COMMIT_HASH=$(git rev-parse HEAD)

          echo "Local commit sha - $COMMIT_HASH"
          
          git push origin $LOCAL_BRANCH

          echo 'Creating PR...'
          PR_URL=$(gh pr create --title "$PR_TITLE" --body "This is an automated PR" --base "$BRANCH")
          echo "PR created, pr url - $PR_URL"
          echo 'Marker - before running gh pr checks'
          gh pr status
          gh pr checks $PR_URL --watch
          echo 'Marker - After running gh pr checks'
          

          echo "Merging PR - $PR_URL"
          gh pr merge --auto --delete-branch --squash "$LOCAL_BRANCH"

          gh pr status
          


          # gh release edit "$TAG" --target "$COMMIT_HASH"
          
          # git tag -f ${{ inputs.ref_name }} $COMMIT_HASH
          # git push --atomic origin $BRANCH ${{ inputs.ref_name }} --force

          # echo "Tag $TAG was linked to a new commit $COMMIT_HASH"


   
